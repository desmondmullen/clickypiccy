{"version":3,"sources":["components/Header.js","components/PictureDisplay.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","highScorer","overallHighScore","thisGameScore","PictureDisplay","state","lastGameScore","newHighScore","idsArray","srcArray","theClicked","openModal1","openModal2","modalMessage","handleClick","event","currentClick","target","id","substr","_this","includes","setState","resetGame","push","shuffle","setTimeout","console","log","theIds","theSrcs","i","length","j","Math","floor","random","_ref","_ref2","handleChange","value","handleSubmit","trim","preventDefault","onCloseModal","this","Fragment","components_Header","index_es","open","onClose","focusTrapped","onSubmit","type","onChange","alt","src","onClick","Component","Footer","href","rel","App","components_PictureDisplay","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ca373fa.chunk.js","sourcesContent":["import React from 'react';\nimport '../components/components.css';\n\nfunction Header(props) {\n\n    return (\n        <header>\n            <section className='large-display'><div className='title'><h1>ClickyPiccy</h1><br /><span className='title-tagline'>Can you click all twelve album covers without clicking any one twice?</span></div><div className='scores'>High Score by {props.highScorer}:<section className='number-display'>{props.overallHighScore}</section><br />Score this game: <section className='number-display'>{props.thisGameScore}</section></div></section>\n\n\n            <section className='small-display'><div className='title'><h1>ClickyPiccy</h1><br /><span className='title-tagline'>Can you click all twelve album covers without clicking any one twice?</span></div>\n                <div className='scores'>High Score by {props.highScorer}:<section className='number-display'>{props.overallHighScore}</section><br />Score this game: <section className='number-display'>{props.thisGameScore}</section></div></section>\n        </header>\n    )\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Modal from 'react-responsive-modal';\nimport '../components/components.css';\n\nclass PictureDisplay extends Component {\n    state = {\n        thisGameScore: 0,\n        lastGameScore: 0,\n        overallHighScore: 0,\n        highScorer: 'anonymous',\n        newHighScore: false,\n        idsArray: ['pic01', 'pic02', 'pic03', 'pic04', 'pic05', 'pic06', 'pic07', 'pic08', 'pic09', 'pic10', 'pic11', 'pic12'],\n        srcArray: ['/assets/images/01.png', '/assets/images/02.png', '/assets/images/03.png', '/assets/images/04.png', '/assets/images/05.png', '/assets/images/06.png', '/assets/images/07.png', '/assets/images/08.png', '/assets/images/09.png', '/assets/images/10.png', '/assets/images/11.png', '/assets/images/12.png'],\n        theClicked: [],\n        openModal1: false,\n        openModal2: false,\n        modalMessage: 'Game over!'\n    };\n\n    componentDidMount() {\n        this.shuffle();\n    }\n\n    handleClick = event => {\n        let currentClick = event.target.id.substr(3, 2);\n        if (this.state.theClicked.includes(currentClick)) {\n            if (this.state.thisGameScore > this.state.overallHighScore) {\n                this.setState({ overallHighScore: this.state.thisGameScore });\n                this.setState({ newHighScore: true });\n            }\n            this.resetGame();\n        } else {\n            if (this.state.thisGameScore === 11) { // with this answer, it's 12\n                this.resetGame();\n            } else {\n                this.state.theClicked.push(currentClick);\n                this.shuffle();\n            }\n            this.setState({ thisGameScore: this.state.thisGameScore + 1 });\n            setTimeout(() => {\n                if (this.state.thisGameScore > this.state.overallHighScore) {\n                    this.setState({ overallHighScore: this.state.thisGameScore });\n                    this.setState({ newHighScore: true });\n                }\n            }, 50);\n        }\n        console.log(currentClick);\n    };\n\n    shuffle = () => {\n        const theIds = this.state.idsArray\n        const theSrcs = this.state.srcArray\n        for (let i = theIds.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [theIds[i], theIds[j]] = [theIds[j], theIds[i]];\n            [theSrcs[i], theSrcs[j]] = [theSrcs[j], theSrcs[i]];\n        }\n        this.setState({ idsArray: theIds });\n        this.setState({ srcArray: theSrcs });\n    }\n\n    resetGame = () => {\n        setTimeout(() => {\n            this.setState({ lastGameScore: this.state.thisGameScore });\n            if (this.state.newHighScore === false && this.state.thisGameScore < 12) {\n                // this.setState({ modalMessage: 'Game Over. Try again!' });\n                this.setState({ openModal1: true });\n            } else {\n                if (this.state.thisGameScore === 12) { // 12 is always a 'new' high score\n                    this.setState({ modalMessage: 'You Won! And you have earned the highest score!' });\n                } else {\n                    if (this.state.newHighScore === true) {\n                        this.setState({ modalMessage: `You didn't win this round. But you earned the highest score!` });\n                    }\n                }\n                this.setState({ openModal2: true });\n            }\n            this.setState({ thisGameScore: 0 });\n            this.setState({ theClicked: [] });\n            this.setState({ newHighScore: false });\n            this.shuffle();\n        }, 100);\n    }\n\n    handleChange = (event) => {\n        this.setState({ highScorer: event.target.value });\n    }\n\n    handleSubmit = (event) => {\n        if (this.state.highScorer.trim() === '') {\n            this.setState({ highScorer: 'anonymous' });\n        };\n        event.preventDefault();\n        this.onCloseModal();\n    }\n\n    onCloseModal = () => {\n        this.setState({ openModal1: false });\n        this.setState({ openModal2: false });\n    };\n\n    render() {\n        return (\n            <>\n                <Header\n                    thisGameScore={this.state.thisGameScore}\n                    overallHighScore={this.state.overallHighScore}\n                    highScorer={this.state.highScorer}\n                /><br />\n                <Modal open={this.state.openModal1} onClose={this.onCloseModal} focusTrapped>\n                    <h1>Game Over. You got {this.state.lastGameScore} out of 12. Try again!</h1>\n                </Modal>\n                <Modal open={this.state.openModal2} onClose={this.onCloseModal} focusTrapped>\n                    <h1>{this.state.modalMessage}</h1>\n                    <h3>Your score was {this.state.lastGameScore} out of 12.</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <h2>Enter your name for posterity:<br /><input type='text' className='high-scorer-input' value={this.state.highScorer} onChange={this.handleChange} /> <button type='submit' value='Submit' className='high-scorer-input'>OK</button></h2>\n                    </form>\n                </Modal>\n                <div className='tile-display wrapper'>\n                    <img id={this.state.idsArray[0]} alt='' className='tile zoom' src={this.state.srcArray[0]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[1]} alt='' className='tile zoom' src={this.state.srcArray[1]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[2]} alt='' className='tile zoom' src={this.state.srcArray[2]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[3]} alt='' className='tile zoom' src={this.state.srcArray[3]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[4]} alt='' className='tile zoom' src={this.state.srcArray[4]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[5]} alt='' className='tile zoom' src={this.state.srcArray[5]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[6]} alt='' className='tile zoom' src={this.state.srcArray[6]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[7]} alt='' className='tile zoom' src={this.state.srcArray[7]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[8]} alt='' className='tile zoom' src={this.state.srcArray[8]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[9]} alt='' className='tile zoom' src={this.state.srcArray[9]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[10]} alt='' className='tile zoom' src={this.state.srcArray[10]} onClick={this.handleClick} />\n                    <img id={this.state.idsArray[11]} alt='' className='tile zoom' src={this.state.srcArray[11]} onClick={this.handleClick} />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default PictureDisplay;\n","import React from 'react';\nimport '../components/components.css';\n\nfunction Footer() {\n    return (\n        <footer className='footer'>\n            <img src='/assets/images/react-logo-black.png' className='logo' alt='logo' /> <em>ClickyPiccy</em> is an exercise in React &bull; &copy; 2019 <a\n                href='https://desmondmullen.com' target='_blank' rel='noopener noreferrer'>desmondmullen.com</a> &bull; <a href='https://github.com/desmondmullen/clickypiccy' target='_blank' rel='noopener noreferrer'>GitHub Repository</a>\n        </footer>\n    )\n};\n\nexport default Footer;\n","import React from 'react';\nimport PictureDisplay from './components/PictureDisplay';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <>\n      <PictureDisplay />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}